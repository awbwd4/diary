1. 다형성의 장점
  1) 다형적 매개변수
  2) 하나의 배열로 여러종류 객체 다루기

2. 추상 메서드
  1) 추상 클래스 : 미완성 메서드인 추상 메서드가 존재하면 추상 클래스
     - 추상 클래스를 구현한 클래스가 미완성 메서드를 모두 구현하면 완전 클래스, 객체 생성가능
     - 추상 클래스를 구현한 클래스가 미완성 메서드를 일부만 구현하면 여전히 추상 클래스, 객체 생성 불가.
  2) 추상 메서드
     - 추상메서드 호출은 가능, 예를들어 같은 추상 클래스 내에 있는 인스턴스 메서드에서 추상 메서드 호출은 가능
     - 선언부만 있으면 호출은 가능하기 때문.
     - 다만 추상클래스이므로 객체 생성이 불가, 완전히 구현된 자손클래스에서 객체 생성 후 호출 가능
     - 자손에게 추상 메서드를 생성하도록 강제 가능

3. 인터페이스
  1) 특징
     - 추상메서드의 집합(추상 클래스는 추상메서드를 “갖고”있는것), 인스턴스 멤버 전혀x
     - 구현된것이 단 하나도 없음
     - 모든 멤버가 public
     - 변수는 가질 수 없음. 상수는 가능(항상 public static final, 일부 또는 전부 생략 가능)
     - 항상 public abstract임 -> 일부 또는 전부 생략 가능
     - 인터페이스의 조상은 인터페이스만 가능
     - 다중 상속 가능(추상 메서드는 충돌해도 괜찮다. 충돌할게 없음.)
     - 추상클래스와의 차이점 : instance 멤버(생성자, 인스턴스 필드, 인스턴스 메서드)를 가질수 없다.

  2) 인터페이스 구현
     - implements
     - 일부만 구현할 경우 그 구현 클래스는 추상클래스가 됨.

  3) 인터페이스 장점
     - 느슨한 결합 : A가 B를 사용할 때, B의 인터페이스만을 사용한다면, 구현체가 변경이 되어도 A에는 영향x
     
  4) 디폴트 메서드
     - 예외 메서드 : 인터페이스에 메서드를 추가할 경우 구현체를 전부 바꿔줘야 하는 문제를 해결하기 위함.
     - 조상 메서드 >> 디폴트 메서드 
